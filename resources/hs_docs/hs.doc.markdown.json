{"convert":{"def":"hs.doc.markdown.convert(markdown, [type]) -> output","desc":"Converts markdown encoded text to html or plaintext.","doc":"Converts markdown encoded text to html or plaintext.\n\nParameters:\n * markdown - a string containing the input text encoded using markdown tags\n * type     - an optional string specifying the conversion options and output type.  Defaults to \"gfm\".  The currently recognized types are:\n   * \"markdown\"  - specifies that the output should be HTML with the standard GitHub/Markdown extensions enabled.\n   * \"gfm\"       - specifies that the output should be HTML with additional GitHub extensions enabled.\n   * \"plaintext\" - specifies that the output should plain text with the standard GitHub/Markdown extensions enabled.\n\nReturns:\n * an HTML or plaintext representation of the markdown encoded text provided.\n\nNotes:\n * The standard GitHub/Markdown extensions enabled for all conversions are:\n   * NO_INTRA_EMPHASIS -  disallow emphasis inside of words\n   * LAX_SPACING       - supports spacing like in Markdown 1.0.0 (i.e. do not require an empty line between two different blocks in a paragraph)\n   * STRIKETHROUGH     - support strikethrough with double tildes (~)\n   * TABLES            - support Markdown tables\n   * FENCED_CODE       - supports fenced code blocks surround by three back-ticks (`) or three tildes (~)\n   * AUTOLINK          - HTTP URL's are treated as links, even if they aren't marked as such with Markdown tags\n\n * The \"gfm\" type also includes the following extensions:\n  * HARD_WRAP     - line breaks are replaced with <br> entities\n  * SPACE_HEADERS - require a space between the `#` and the name of a header (prevents collisions with the Issues filter)","examples":[],"file":"extensions/doc/markdown.m","lineno":"167","name":"convert","notes":[" * The standard GitHub/Markdown extensions enabled for all conversions are:","   * NO_INTRA_EMPHASIS -  disallow emphasis inside of words","   * LAX_SPACING       - supports spacing like in Markdown 1.0.0 (i.e. do not require an empty line between two different blocks in a paragraph)","   * STRIKETHROUGH     - support strikethrough with double tildes (~)","   * TABLES            - support Markdown tables","   * FENCED_CODE       - supports fenced code blocks surround by three back-ticks (`) or three tildes (~)","   * AUTOLINK          - HTTP URL's are treated as links, even if they aren't marked as such with Markdown tags",""," * The \"gfm\" type also includes the following extensions:","  * HARD_WRAP     - line breaks are replaced with <br> entities","  * SPACE_HEADERS - require a space between the `#` and the name of a header (prevents collisions with the Issues filter)"],"parameters":[" * markdown - a string containing the input text encoded using markdown tags"," * type     - an optional string specifying the conversion options and output type.  Defaults to \"gfm\".  The currently recognized types are:\n   * \"markdown\"  - specifies that the output should be HTML with the standard GitHub/Markdown extensions enabled.\n   * \"gfm\"       - specifies that the output should be HTML with additional GitHub extensions enabled.\n   * \"plaintext\" - specifies that the output should plain text with the standard GitHub/Markdown extensions enabled."],"returns":[" * an HTML or plaintext representation of the markdown encoded text provided."],"signature":"hs.doc.markdown.convert(markdown, [type]) -> output","stripped_doc":" * The \"gfm\" type also includes the following extensions:\n  * HARD_WRAP     - line breaks are replaced with <br> entities\n  * SPACE_HEADERS - require a space between the `#` and the name of a header (prevents collisions with the Issues filter)","type":"Function"}}
