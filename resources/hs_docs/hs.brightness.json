{"ambient":{"def":"hs.brightness.ambient() -> number","desc":"Gets the current ambient brightness","doc":"Gets the current ambient brightness\n\nParameters:\n * None\n\nReturns:\n * A number containing the current ambient brightness, measured in lux. If an error occurred, the number will be -1\n\nNotes:\n * Even though external Apple displays include an ambient light sensor, their data is typically not available, so this function will likely only be useful to MacBook users\n\n * On Silicon based macs, this function uses a method similar to that used by `corebrightnessdiag` to retrieve the aggregate lux as reported to `sysdiagnose`.\n * On Intel based macs, the raw sensor data is converted to lux via an algorithm used by Mozilla Firefox and is not guaranteed to give an accurate lux value.","examples":[],"file":"extensions/brightness/libbrightness.m","lineno":"18","name":"ambient","notes":[" * Even though external Apple displays include an ambient light sensor, their data is typically not available, so this function will likely only be useful to MacBook users",""," * On Silicon based macs, this function uses a method similar to that used by `corebrightnessdiag` to retrieve the aggregate lux as reported to `sysdiagnose`."," * On Intel based macs, the raw sensor data is converted to lux via an algorithm used by Mozilla Firefox and is not guaranteed to give an accurate lux value."],"parameters":[" * None"],"returns":[" * A number containing the current ambient brightness, measured in lux. If an error occurred, the number will be -1"],"signature":"hs.brightness.ambient() -> number","stripped_doc":" * On Silicon based macs, this function uses a method similar to that used by `corebrightnessdiag` to retrieve the aggregate lux as reported to `sysdiagnose`.\n * On Intel based macs, the raw sensor data is converted to lux via an algorithm used by Mozilla Firefox and is not guaranteed to give an accurate lux value.","type":"Function"},"get":{"def":"hs.brightness.get() -> number","desc":"Returns the current brightness of the display","doc":"Returns the current brightness of the display\n\nParameters:\n * None\n\nReturns:\n * A number containing the brightness of the display, between 0 and 100","examples":[],"file":"extensions/brightness/libbrightness.m","lineno":"120","name":"get","notes":[],"parameters":[" * None"],"returns":[" * A number containing the brightness of the display, between 0 and 100"],"signature":"hs.brightness.get() -> number","stripped_doc":"","type":"Function"},"set":{"def":"hs.brightness.set(brightness) -> boolean","desc":"Sets the display brightness","doc":"Sets the display brightness\n\nParameters:\n * brightness - A number between 0 and 100\n\nReturns:\n * True if the brightness was set, false if not","examples":[],"file":"extensions/brightness/libbrightness.m","lineno":"82","name":"set","notes":[],"parameters":[" * brightness - A number between 0 and 100"],"returns":[" * True if the brightness was set, false if not"],"signature":"hs.brightness.set(brightness) -> boolean","stripped_doc":"","type":"Function"}}