{"activated":{"def":"hs.application.watcher.activated","desc":"An application has been activated (i.e. given keyboard/mouse focus)","doc":"An application has been activated (i.e. given keyboard/mouse focus)","file":"extensions/application/libapplication_watcher.m","lineno":"33","name":"activated","signature":"hs.application.watcher.activated","stripped_doc":"","type":"Constant"},"deactivated":{"def":"hs.application.watcher.deactivated","desc":"An application has been deactivated (i.e. lost keyboard/mouse focus)","doc":"An application has been deactivated (i.e. lost keyboard/mouse focus)","file":"extensions/application/libapplication_watcher.m","lineno":"37","name":"deactivated","signature":"hs.application.watcher.deactivated","stripped_doc":"","type":"Constant"},"hidden":{"def":"hs.application.watcher.hidden","desc":"An application has been hidden","doc":"An application has been hidden","file":"extensions/application/libapplication_watcher.m","lineno":"25","name":"hidden","signature":"hs.application.watcher.hidden","stripped_doc":"","type":"Constant"},"launched":{"def":"hs.application.watcher.launched","desc":"An application has been launched","doc":"An application has been launched","file":"extensions/application/libapplication_watcher.m","lineno":"17","name":"launched","signature":"hs.application.watcher.launched","stripped_doc":"","type":"Constant"},"launching":{"def":"hs.application.watcher.launching","desc":"An application is in the process of being launched","doc":"An application is in the process of being launched","file":"extensions/application/libapplication_watcher.m","lineno":"13","name":"launching","signature":"hs.application.watcher.launching","stripped_doc":"","type":"Constant"},"new":{"def":"hs.application.watcher.new(fn) -> watcher","desc":"Creates an application event watcher","doc":"Creates an application event watcher\n\nParameters:\n * fn - A function that will be called when application events happen. It should accept three parameters:\n  * A string containing the name of the application\n  * An event type (see the constants defined above)\n  * An `hs.application` object representing the application, or nil if the application couldn't be found\n\nReturns:\n * An `hs.application.watcher` object\n\nNotes:\n * If the function is called with an event type of `hs.application.watcher.terminated` then the application name parameter will be `nil` and the `hs.application` parameter, will only be useful for getting the UNIX process ID (i.e. the PID) of the application","examples":[],"file":"extensions/application/libapplication_watcher.m","lineno":"142","name":"new","notes":[" * If the function is called with an event type of `hs.application.watcher.terminated` then the application name parameter will be `nil` and the `hs.application` parameter, will only be useful for getting the UNIX process ID (i.e. the PID) of the application"],"parameters":[" * fn - A function that will be called when application events happen. It should accept three parameters:\n   * A string containing the name of the application\n   * An event type (see the constants defined above)\n   * An `hs.application` object representing the application, or nil if the application couldn't be found"],"returns":[" * An `hs.application.watcher` object"],"signature":"hs.application.watcher.new(fn) -> watcher","stripped_doc":"","type":"Constructor"},"start":{"def":"hs.application.watcher:start()","desc":"Starts the application watcher","doc":"Starts the application watcher\n\nParameters:\n * None\n\nReturns:\n * The `hs.application.watcher` object","examples":[],"file":"extensions/application/libapplication_watcher.m","lineno":"224","name":"start","notes":[],"parameters":[" * None"],"returns":[" * The `hs.application.watcher` object"],"signature":"hs.application.watcher:start()","stripped_doc":"","type":"Method"},"stop":{"def":"hs.application.watcher:stop()","desc":"Stops the application watcher","doc":"Stops the application watcher\n\nParameters:\n * None\n\nReturns:\n * The `hs.application.watcher` object","examples":[],"file":"extensions/application/libapplication_watcher.m","lineno":"247","name":"stop","notes":[],"parameters":[" * None"],"returns":[" * The `hs.application.watcher` object"],"signature":"hs.application.watcher:stop()","stripped_doc":"","type":"Method"},"terminated":{"def":"hs.application.watcher.terminated","desc":"An application has been terminated","doc":"An application has been terminated","file":"extensions/application/libapplication_watcher.m","lineno":"21","name":"terminated","signature":"hs.application.watcher.terminated","stripped_doc":"","type":"Constant"},"unhidden":{"def":"hs.application.watcher.unhidden","desc":"An application has been unhidden","doc":"An application has been unhidden","file":"extensions/application/libapplication_watcher.m","lineno":"29","name":"unhidden","signature":"hs.application.watcher.unhidden","stripped_doc":"","type":"Constant"}}