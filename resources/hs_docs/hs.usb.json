{"watcher":{"type":"Module","doc":"Watch for USB device connection/disconnection events","def":"-> hs.usb.watcher"},"attachedDevices":{"def":"hs.usb.attachedDevices() -> table or nil","desc":"Gets details about currently attached USB devices","doc":"Gets details about currently attached USB devices\n\nParameters:\n * None\n\nReturns:\n * A table containing information about currently attached USB devices, or nil if an error occurred. The table contains a sub-table for each USB device, the keys of which are:\n  * productName - A string containing the name of the device\n  * vendorName - A string containing the name of the device vendor\n  * vendorID - A number containing the Vendor ID of the device\n  * productID - A number containing the Product ID of the device","examples":[],"file":"extensions/usb/libusb.m","lineno":"14","name":"attachedDevices","notes":[],"parameters":[" * None"],"returns":[" * A table containing information about currently attached USB devices, or nil if an error occurred. The table contains a sub-table for each USB device, the keys of which are:","  * productName - A string containing the name of the device","  * vendorName - A string containing the name of the device vendor","  * vendorID - A number containing the Vendor ID of the device","  * productID - A number containing the Product ID of the device"],"signature":"hs.usb.attachedDevices() -> table or nil","stripped_doc":"","type":"Function"}}