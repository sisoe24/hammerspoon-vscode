{"new":{"def":"hs.window.switcher.new([windowfilter[, uiPrefs][, logname, [loglevel]]]) -> hs.window.switcher object","desc":"Creates a new switcher instance; it can use a windowfilter to determine which windows to show","doc":"Creates a new switcher instance; it can use a windowfilter to determine which windows to show\n\nParameters:\n * windowfilter - (optional) if omitted or nil, use the default windowfilter; otherwise it must be a windowfilter\n   instance or constructor table\n * uiPrefs - (optional) a table to override UI preferences for this instance; its keys and values\n   must follow the conventions described in `hs.window.switcher.ui`; this parameter allows you to have multiple\n   switcher instances with different behaviour (for example, with and without thumbnails and/or titles)\n   using different hotkeys\n * logname - (optional) name of the `hs.logger` instance for the new switcher; if omitted, the class logger will be used\n * loglevel - (optional) log level for the `hs.logger` instance for the new switcher\n\nReturns:\n * the new instance","examples":[],"file":"extensions/window/window_switcher.lua","lineno":"393","name":"new","notes":[],"parameters":[" * windowfilter - (optional) if omitted or nil, use the default windowfilter; otherwise it must be a windowfilter instance or constructor table"," * uiPrefs - (optional) a table to override UI preferences for this instance; its keys and values must follow the conventions described in `hs.window.switcher.ui`; this parameter allows you to have multiple switcher instances with different behaviour (for example, with and without thumbnails and/or titles) using different hotkeys"," * logname - (optional) name of the `hs.logger` instance for the new switcher; if omitted, the class logger will be used"," * loglevel - (optional) log level for the `hs.logger` instance for the new switcher"],"returns":[" * the new instance"],"signature":"hs.window.switcher.new([windowfilter[, uiPrefs][, logname, [loglevel]]]) -> hs.window.switcher object","stripped_doc":"","type":"Constructor"},"next":{"def":"hs.window.switcher:next()","desc":"Shows the switcher instance (if not yet visible) and selects the next window","doc":"Shows the switcher instance (if not yet visible) and selects the next window\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * the switcher will be dismissed (and the selected window focused) when all modifier keys are released","examples":[],"file":"extensions/window/window_switcher.lua","lineno":"285","name":"next","notes":[" * the switcher will be dismissed (and the selected window focused) when all modifier keys are released"],"parameters":[" * None"],"returns":[" * None"],"signature":"hs.window.switcher:next()","stripped_doc":"","type":"Method"},"nextWindow":{"def":"hs.window.switcher.nextWindow()","desc":"Shows the switcher (if not yet visible) and selects the next window","doc":"Shows the switcher (if not yet visible) and selects the next window\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * the switcher will be dismissed (and the selected window focused) when all modifier keys are released","examples":[],"file":"extensions/window/window_switcher.lua","lineno":"318","name":"nextWindow","notes":[" * the switcher will be dismissed (and the selected window focused) when all modifier keys are released"],"parameters":[" * None"],"returns":[" * None"],"signature":"hs.window.switcher.nextWindow()","stripped_doc":"","type":"Function"},"previous":{"def":"hs.window.switcher:previous()","desc":"Shows the switcher instance (if not yet visible) and selects the previous window","doc":"Shows the switcher instance (if not yet visible) and selects the previous window\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * the switcher will be dismissed (and the selected window focused) when all modifier keys are released","examples":[],"file":"extensions/window/window_switcher.lua","lineno":"298","name":"previous","notes":[" * the switcher will be dismissed (and the selected window focused) when all modifier keys are released"],"parameters":[" * None"],"returns":[" * None"],"signature":"hs.window.switcher:previous()","stripped_doc":"","type":"Method"},"previousWindow":{"def":"hs.window.switcher.previousWindow()","desc":"Shows the switcher (if not yet visible) and selects the previous window","doc":"Shows the switcher (if not yet visible) and selects the previous window\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * the switcher will be dismissed (and the selected window focused) when all modifier keys are released","examples":[],"file":"extensions/window/window_switcher.lua","lineno":"331","name":"previousWindow","notes":[" * the switcher will be dismissed (and the selected window focused) when all modifier keys are released"],"parameters":[" * None"],"returns":[" * None"],"signature":"hs.window.switcher.previousWindow()","stripped_doc":"","type":"Function"},"ui":{"def":"hs.window.switcher.ui","desc":"Allows customization of the switcher behaviour and user interface","doc":"Allows customization of the switcher behaviour and user interface\n\nThis table contains variables that you can change to customize the behaviour of the switcher and the look of the UI.\nTo have multiple switcher instances with different behaviour/looks, use the `uiPrefs` parameter for the constructor;\nthe passed keys and values will override those in this table for that particular instance.\n\nThe default values are shown in the right hand side of the assignments below.\n\nTo represent color values, you can use:\n * a table {red=redN, green=greenN, blue=blueN, alpha=alphaN}\n * a table {redN,greenN,blueN[,alphaN]} - if omitted alphaN defaults to 1.0\nwhere redN, greenN etc. are the desired value for the color component between 0.0 and 1.0\n\n * `hs.window.switcher.ui.textColor = {0.9,0.9,0.9}`\n * `hs.window.switcher.ui.fontName = 'Lucida Grande'`\n * `hs.window.switcher.ui.textSize = 16` - in screen points\n * `hs.window.switcher.ui.highlightColor = {0.8,0.5,0,0.8}` - highlight color for the selected window\n * `hs.window.switcher.ui.backgroundColor = {0.3,0.3,0.3,1}`\n * `hs.window.switcher.ui.onlyActiveApplication = false` -- only show windows of the active application\n * `hs.window.switcher.ui.showTitles = true` - show window titles\n * `hs.window.switcher.ui.titleBackgroundColor = {0,0,0}`\n * `hs.window.switcher.ui.showThumbnails = true` - show window thumbnails\n * `hs.window.switcher.ui.thumbnailSize = 128` - size of window thumbnails in screen points\n * `hs.window.switcher.ui.showSelectedThumbnail = true` - show a larger thumbnail for the currently selected window\n * `hs.window.switcher.ui.selectedThumbnailSize = 384`\n * `hs.window.switcher.ui.showSelectedTitle = true` - show larger title for the currently selected window","file":"extensions/window/window_switcher.lua","lineno":"53","name":"ui","signature":"hs.window.switcher.ui","stripped_doc":"This table contains variables that you can change to customize the behaviour of the switcher and the look of the UI.\nTo have multiple switcher instances with different behaviour/looks, use the `uiPrefs` parameter for the constructor;\nthe passed keys and values will override those in this table for that particular instance.\nThe default values are shown in the right hand side of the assignments below.\nTo represent color values, you can use:\n * a table {red=redN, green=greenN, blue=blueN, alpha=alphaN}\n * a table {redN,greenN,blueN[,alphaN]} - if omitted alphaN defaults to 1.0\nwhere redN, greenN etc. are the desired value for the color component between 0.0 and 1.0\n * `hs.window.switcher.ui.textColor = {0.9,0.9,0.9}`\n * `hs.window.switcher.ui.fontName = 'Lucida Grande'`\n * `hs.window.switcher.ui.textSize = 16` - in screen points\n * `hs.window.switcher.ui.highlightColor = {0.8,0.5,0,0.8}` - highlight color for the selected window\n * `hs.window.switcher.ui.backgroundColor = {0.3,0.3,0.3,1}`\n * `hs.window.switcher.ui.onlyActiveApplication = false` -- only show windows of the active application\n * `hs.window.switcher.ui.showTitles = true` - show window titles\n * `hs.window.switcher.ui.titleBackgroundColor = {0,0,0}`\n * `hs.window.switcher.ui.showThumbnails = true` - show window thumbnails\n * `hs.window.switcher.ui.thumbnailSize = 128` - size of window thumbnails in screen points\n * `hs.window.switcher.ui.showSelectedThumbnail = true` - show a larger thumbnail for the currently selected window\n * `hs.window.switcher.ui.selectedThumbnailSize = 384`\n * `hs.window.switcher.ui.showSelectedTitle = true` - show larger title for the currently selected window","type":"Variable"}}
