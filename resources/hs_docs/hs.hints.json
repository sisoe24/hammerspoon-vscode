{"fontName":{"def":"hs.hints.fontName","desc":"A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)","doc":"A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)\nThe default value is the system font","file":"extensions/hints/hints.lua","lineno":"25","name":"fontName","signature":"hs.hints.fontName","stripped_doc":"The default value is the system font","type":"Variable"},"fontSize":{"def":"hs.hints.fontSize","desc":"The size of font that should be used. A value of 0.0 will use the default size.","doc":"The size of font that should be used. A value of 0.0 will use the default size.","file":"extensions/hints/hints.lua","lineno":"31","name":"fontSize","signature":"hs.hints.fontSize","stripped_doc":"","type":"Variable"},"hintChars":{"def":"hs.hints.hintChars","desc":"This controls the set of characters that will be used for window hints. They must be characters found in hs.keycodes.map","doc":"This controls the set of characters that will be used for window hints. They must be characters found in hs.keycodes.map\nThe default is the letters A-Z. Note that if `hs.hints.style` is set to \"vimperator\", this variable will be ignored.","file":"extensions/hints/hints.lua","lineno":"10","name":"hintChars","signature":"hs.hints.hintChars","stripped_doc":"The default is the letters A-Z. Note that if `hs.hints.style` is set to \"vimperator\", this variable will be ignored.","type":"Variable"},"iconAlpha":{"def":"hs.hints.iconAlpha","desc":"Opacity of the application icon. Default is 0.95.","doc":"Opacity of the application icon. Default is 0.95.","file":"extensions/hints/hints.lua","lineno":"47","name":"iconAlpha","signature":"hs.hints.iconAlpha","stripped_doc":"","type":"Variable"},"showTitleThresh":{"def":"hs.hints.showTitleThresh","desc":"If there are less than or equal to this many windows on screen their titles will be shown in the hints.","doc":"If there are less than or equal to this many windows on screen their titles will be shown in the hints.\nThe default is 4. Setting to 0 will disable this feature.","file":"extensions/hints/hints.lua","lineno":"36","name":"showTitleThresh","signature":"hs.hints.showTitleThresh","stripped_doc":"The default is 4. Setting to 0 will disable this feature.","type":"Variable"},"style":{"def":"hs.hints.style","desc":"If this is set to \"vimperator\", every window hint starts with the first character","doc":"If this is set to \"vimperator\", every window hint starts with the first character\nof the parent application's title","file":"extensions/hints/hints.lua","lineno":"19","name":"style","signature":"hs.hints.style","stripped_doc":"of the parent application's title","type":"Variable"},"titleMaxSize":{"def":"hs.hints.titleMaxSize","desc":"If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6","doc":"If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6","file":"extensions/hints/hints.lua","lineno":"42","name":"titleMaxSize","signature":"hs.hints.titleMaxSize","stripped_doc":"","type":"Variable"},"windowHints":{"def":"hs.hints.windowHints([windows, callback, allowNonStandard])","desc":"Displays a keyboard hint for switching focus to each window","doc":"Displays a keyboard hint for switching focus to each window\n\nParameters:\n * windows - An optional table containing some `hs.window` objects. If this value is nil, all windows will be hinted\n * callback - An optional function that will be called when a window has been selected by the user. The function will be called with a single argument containing the `hs.window` object of the window chosen by the user\n * allowNonStandard - An optional boolean.  If true, all windows will be included, not just standard windows\n\nReturns:\n * None\n\nNotes:\n * If there are more windows open than there are characters available in hs.hints.hintChars, multiple characters will be used\n * If hints.style is set to \"vimperator\", every window hint is prefixed with the first character of the parent application's name\n * To display hints only for the currently focused application, try something like:\n  * `hs.hints.windowHints(hs.window.focusedWindow():application():allWindows())`","examples":[],"file":"extensions/hints/hints.lua","lineno":"201","name":"windowHints","notes":[" * If there are more windows open than there are characters available in hs.hints.hintChars, multiple characters will be used"," * If hints.style is set to \"vimperator\", every window hint is prefixed with the first character of the parent application's name"," * To display hints only for the currently focused application, try something like:","  * `hs.hints.windowHints(hs.window.focusedWindow():application():allWindows())`"],"parameters":[" * windows - An optional table containing some `hs.window` objects. If this value is nil, all windows will be hinted"," * callback - An optional function that will be called when a window has been selected by the user. The function will be called with a single argument containing the `hs.window` object of the window chosen by the user"," * allowNonStandard - An optional boolean.  If true, all windows will be included, not just standard windows"],"returns":[" * None"],"signature":"hs.hints.windowHints([windows, callback, allowNonStandard])","stripped_doc":"","type":"Function"}}