{"delete":{"def":"hs.milight:delete()","desc":"Deletes an `hs.milight` object","doc":"Deletes an `hs.milight` object\n\nParameters:\n * None\n\nReturns:\n * None","examples":[],"file":"extensions/milight/libmilight.m","lineno":"121","name":"delete","notes":[],"parameters":[" * None"],"returns":[" * None"],"signature":"hs.milight:delete()","stripped_doc":"","type":"Method"},"disco":{"def":"hs.milight:disco() -> bool","desc":"Cycles through the disco modes","doc":"Cycles through the disco modes\n\nParameters:\n * None\n\nReturns:\n * True if the command was sent correctly, otherwise false","examples":[],"file":"extensions/milight/milight.lua","lineno":"90","name":"disco","notes":[],"parameters":[" * None"],"returns":[" * True if the command was sent correctly, otherwise false"],"signature":"hs.milight:disco() -> bool","stripped_doc":"","type":"Method"},"maxBrightness":{"def":"hs.milight.maxBrightness","desc":"Specifies the maximum brightness value that can be used. Defaults to 25","doc":"Specifies the maximum brightness value that can be used. Defaults to 25","file":"extensions/milight/milight.lua","lineno":"14","name":"maxBrightness","signature":"hs.milight.maxBrightness","stripped_doc":"","type":"Constant"},"minBrightness":{"def":"hs.milight.minBrightness","desc":"Specifies the minimum brightness value that can be used. Defaults to 0","doc":"Specifies the minimum brightness value that can be used. Defaults to 0","file":"extensions/milight/milight.lua","lineno":"9","name":"minBrightness","signature":"hs.milight.minBrightness","stripped_doc":"","type":"Constant"},"new":{"def":"hs.milight.new(ip[, port]) -> bridge","desc":"Creates a new bridge object, which will be connected to the supplied IP address and port","doc":"Creates a new bridge object, which will be connected to the supplied IP address and port\n\nParameters:\n * ip - A string containing the IP address of the MiLight WiFi bridge device. For convenience this can be the broadcast address of your network (e.g. 192.168.0.255)\n * port - An optional number containing the UDP port to talk to the bridge on. Defaults to 8899\n\nReturns:\n * An `hs.milight` object\n\nNotes:\n * You can not use 255.255.255.255 as the IP address, to do so requires elevated privileges for the Hammerspoon process","examples":[],"file":"extensions/milight/libmilight.m","lineno":"73","name":"new","notes":[" * You can not use 255.255.255.255 as the IP address, to do so requires elevated privileges for the Hammerspoon process"],"parameters":[" * ip - A string containing the IP address of the MiLight WiFi bridge device. For convenience this can be the broadcast address of your network (e.g. 192.168.0.255)"," * port - An optional number containing the UDP port to talk to the bridge on. Defaults to 8899"],"returns":[" * An `hs.milight` object"],"signature":"hs.milight.new(ip[, port]) -> bridge","stripped_doc":"","type":"Constructor"},"send":{"def":"hs.milight:send(cmd[, value]) -> bool","desc":"Sends a command to the bridge","doc":"Sends a command to the bridge\n\nParameters:\n * cmd - A command from the `hs.milight.cmd` table\n * value - An optional value, if appropriate for the command (defaults to 0x00)\n\nReturns:\n * True if the command was sent, otherwise false\n\nNotes:\n * This is a low level command, you typically should use a specific method for the operation you want to perform","examples":[],"file":"extensions/milight/libmilight.m","lineno":"140","name":"send","notes":[" * This is a low level command, you typically should use a specific method for the operation you want to perform"],"parameters":[" * cmd - A command from the `hs.milight.cmd` table"," * value - An optional value, if appropriate for the command (defaults to 0x00)"],"returns":[" * True if the command was sent, otherwise false"],"signature":"hs.milight:send(cmd[, value]) -> bool","stripped_doc":"","type":"Method"},"zoneBrightness":{"def":"hs.milight:zoneBrightness(zone, value) -> integer","desc":"Sets brightness for the specified zone","doc":"Sets brightness for the specified zone\n\nParameters:\n * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four\n * value - A number containing the brightness level to set, between `hs.milight.minBrightness` and `hs.milight.maxBrightness`\n\nReturns:\n * A number containing the value that was sent to the WiFi bridge, or -1 if an error occurred","examples":[],"file":"extensions/milight/milight.lua","lineno":"107","name":"zoneBrightness","notes":[],"parameters":[" * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four"," * value - A number containing the brightness level to set, between `hs.milight.minBrightness` and `hs.milight.maxBrightness`"],"returns":[" * A number containing the value that was sent to the WiFi bridge, or -1 if an error occurred"],"signature":"hs.milight:zoneBrightness(zone, value) -> integer","stripped_doc":"","type":"Method"},"zoneColor":{"def":"hs.milight:zoneColor(zone, value) -> bool","desc":"Sets RGB color for the specified zone","doc":"Sets RGB color for the specified zone\n\nParameters:\n * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four\n * value - A number between 0 and 255 that represents a color\n\nReturns:\n * True if the command was sent correctly, otherwise false\n\nNotes:\n * The color value is not a normal RGB colour, but rather a lookup in an internal table in the light hardware. While any number between 0 and 255 is valid, there are some useful values worth knowing:\n  * 00 - Violet\n  * 16 - Royal Blue\n  * 32 - Baby Blue\n  * 48 - Aqua\n  * 64 - Mint Green\n  * 80 - Seafoam Green\n  * 96 - Green\n  * 112 - Lime Green\n  * 128 - Yellow\n  * 144 - Yellowy Orange\n  * 160 - Orange\n  * 176 - Red\n  * 194 - Pink\n  * 210 - Fuchsia\n  * 226 - Lilac\n  * 240 - Lavender","examples":[],"file":"extensions/milight/milight.lua","lineno":"121","name":"zoneColor","notes":[" * The color value is not a normal RGB colour, but rather a lookup in an internal table in the light hardware. While any number between 0 and 255 is valid, there are some useful values worth knowing:","  * 00 - Violet","  * 16 - Royal Blue","  * 32 - Baby Blue","  * 48 - Aqua","  * 64 - Mint Green","  * 80 - Seafoam Green","  * 96 - Green","  * 112 - Lime Green","  * 128 - Yellow","  * 144 - Yellowy Orange","  * 160 - Orange","  * 176 - Red","  * 194 - Pink","  * 210 - Fuchsia","  * 226 - Lilac","  * 240 - Lavender"],"parameters":[" * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four"," * value - A number between 0 and 255 that represents a color"],"returns":[" * True if the command was sent correctly, otherwise false"],"signature":"hs.milight:zoneColor(zone, value) -> bool","stripped_doc":"","type":"Method"},"zoneOff":{"def":"hs.milight:zoneOff(zone) -> bool","desc":"Turns off the specified zone","doc":"Turns off the specified zone\n\nParameters:\n * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four\n\nReturns:\n * True if the command was sent correctly, otherwise false","examples":[],"file":"extensions/milight/milight.lua","lineno":"64","name":"zoneOff","notes":[],"parameters":[" * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four"],"returns":[" * True if the command was sent correctly, otherwise false"],"signature":"hs.milight:zoneOff(zone) -> bool","stripped_doc":"","type":"Method"},"zoneOn":{"def":"hs.milight:zoneOn(zone) -> bool","desc":"Turns on the specified zone","doc":"Turns on the specified zone\n\nParameters:\n * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four\n\nReturns:\n * True if the command was sent correctly, otherwise false","examples":[],"file":"extensions/milight/milight.lua","lineno":"77","name":"zoneOn","notes":[],"parameters":[" * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four"],"returns":[" * True if the command was sent correctly, otherwise false"],"signature":"hs.milight:zoneOn(zone) -> bool","stripped_doc":"","type":"Method"},"zoneWhite":{"def":"hs.milight:zoneWhite(zone) -> bool","desc":"Sets the specified zone to white","doc":"Sets the specified zone to white\n\nParameters:\n * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four\n\nReturns:\n * True if the command was sent correctly, otherwise false","examples":[],"file":"extensions/milight/milight.lua","lineno":"154","name":"zoneWhite","notes":[],"parameters":[" * zone - A number specifying which zone to operate on. 0 for all zones, 1-4 for zones one through four"],"returns":[" * True if the command was sent correctly, otherwise false"],"signature":"hs.milight:zoneWhite(zone) -> bool","stripped_doc":"","type":"Method"}}
