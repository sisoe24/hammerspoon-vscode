{"new":{"def":"hs.pathwatcher.new(path, fn) -> watcher","desc":"Creates a new path watcher object","doc":"Creates a new path watcher object\n\nParameters:\n * path - A string containing the path to be watched\n * fn - A function to be called when changes are detected. It should accept two arguments:\n   * `paths`: a table containing a list of file paths that have changed\n   * `flagTables`: a table containing a list of tables denoting how each corresponding file in `paths` has changed, each containing boolean values indicating which types of events occurred; The possible keys are:\n     * mustScanSubDirs\n     * userDropped\n     * kernelDropped\n     * eventIdsWrapped\n     * historyDone\n     * rootChanged\n     * mount\n     * unmount\n     * itemCreated\n     * itemRemoved\n     * itemInodeMetaMod\n     * itemRenamed\n     * itemModified\n     * itemFinderInfoMod\n     * itemChangeOwner\n     * itemXattrMod\n     * itemIsFile\n     * itemIsDir\n     * itemIsSymlink\n     * ownEvent (OS X 10.9+)\n     * itemIsHardlink (OS X 10.10+)\n     * itemIsLastHardlink (OS X 10.10+)\n\nReturns:\n * An `hs.pathwatcher` object\n\nNotes:\n * For more information about the event flags, see [the official documentation](https://developer.apple.com/reference/coreservices/1455361-fseventstreameventflags/)","examples":[],"file":"extensions/pathwatcher/libpathwatcher.m","lineno":"83","name":"new","notes":[" * For more information about the event flags, see [the official documentation](https://developer.apple.com/reference/coreservices/1455361-fseventstreameventflags/)"],"parameters":[" * path - A string containing the path to be watched"," * fn - A function to be called when changes are detected. It should accept two arguments:\n   * `paths`: a table containing a list of file paths that have changed\n   * `flagTables`: a table containing a list of tables denoting how each corresponding file in `paths` has changed, each containing boolean values indicating which types of events occurred; The possible keys are: * mustScanSubDirs * userDropped * kernelDropped * eventIdsWrapped * historyDone * rootChanged * mount * unmount * itemCreated * itemRemoved * itemInodeMetaMod * itemRenamed * itemModified * itemFinderInfoMod * itemChangeOwner * itemXattrMod * itemIsFile * itemIsDir * itemIsSymlink * ownEvent (OS X 10.9+) * itemIsHardlink (OS X 10.10+) * itemIsLastHardlink (OS X 10.10+)"],"returns":[" * An `hs.pathwatcher` object"],"signature":"hs.pathwatcher.new(path, fn) -> watcher","stripped_doc":"","type":"Constructor"},"start":{"def":"hs.pathwatcher:start()","desc":"Starts a path watcher","doc":"Starts a path watcher\n\nParameters:\n * None\n\nReturns:\n * The `hs.pathwatcher` object","examples":[],"file":"extensions/pathwatcher/libpathwatcher.m","lineno":"153","name":"start","notes":[],"parameters":[" * None"],"returns":[" * The `hs.pathwatcher` object"],"signature":"hs.pathwatcher:start()","stripped_doc":"","type":"Method"},"stop":{"def":"hs.pathwatcher:stop()","desc":"Stops a path watcher","doc":"Stops a path watcher\n\nParameters:\n * None\n\nReturns:\n * None","examples":[],"file":"extensions/pathwatcher/libpathwatcher.m","lineno":"175","name":"stop","notes":[],"parameters":[" * None"],"returns":[" * None"],"signature":"hs.pathwatcher:stop()","stripped_doc":"","type":"Method"}}