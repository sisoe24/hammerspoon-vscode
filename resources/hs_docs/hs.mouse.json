{"absolutePosition":{"def":"hs.mouse.absolutePosition([point]) -> point","desc":"Get or set the absolute co-ordinates of the mouse pointer","doc":"Get or set the absolute co-ordinates of the mouse pointer\n\nParameters:\n * An optional point table containing the absolute x and y co-ordinates to move the mouse pointer to\n\nReturns:\n * A point table containing the absolute x and y co-ordinates of the mouse pointer\n\nNotes:\n * If no parameters are supplied, the current position will be returned. If a point table parameter is supplied, the mouse pointer poisition will be set and the new co-ordinates returned","examples":[],"file":"extensions/mouse/libmouse.m","lineno":"202","name":"absolutePosition","notes":[" * If no parameters are supplied, the current position will be returned. If a point table parameter is supplied, the mouse pointer poisition will be set and the new co-ordinates returned"],"parameters":[" * An optional point table containing the absolute x and y co-ordinates to move the mouse pointer to"],"returns":[" * A point table containing the absolute x and y co-ordinates of the mouse pointer"],"signature":"hs.mouse.absolutePosition([point]) -> point","stripped_doc":"","type":"Function"},"count":{"def":"hs.mouse.count([includeInternal]) -> number","desc":"Gets the total number of mice connected to your system.","doc":"Gets the total number of mice connected to your system.\n\nParameters:\n * includeInternal - A boolean which sets whether or not you want to include internal Trackpad's in the count. Defaults to false.\n\nReturns:\n * The number of mice connected to your system\n\nNotes:\n * This function leverages code from [ManyMouse](http://icculus.org/manymouse/).\n * This function considers any mouse labelled as \"Apple Internal Keyboard / Trackpad\" to be an internal mouse.","examples":[],"file":"extensions/mouse/libmouse.m","lineno":"154","name":"count","notes":[" * This function leverages code from [ManyMouse](http://icculus.org/manymouse/)."," * This function considers any mouse labelled as \"Apple Internal Keyboard / Trackpad\" to be an internal mouse."],"parameters":[" * includeInternal - A boolean which sets whether or not you want to include internal Trackpad's in the count. Defaults to false."],"returns":[" * The number of mice connected to your system"],"signature":"hs.mouse.count([includeInternal]) -> number","stripped_doc":"","type":"Function"},"getButtons":{"def":"hs.mouse.getButtons() -> table","desc":"Returns a table containing the current mouse buttons being pressed *at this instant*.","doc":"Returns a table containing the current mouse buttons being pressed *at this instant*.\n\nParameters:\n * None\n\nReturns:\n * Returns an array containing indicies starting from 1 up to the highest numbered button currently being pressed where the index is `true` if the button is currently pressed or `false` if it is not.\n * Special hash tag synonyms for `left` (button 1), `right` (button 2), and `middle` (button 3) are also set to true if these buttons are currently being pressed.\n\nNotes:\n * This function is a wrapper to `hs.eventtap.checkMouseButtons`\n * This is an instantaneous poll of the current mouse buttons, not a callback.","examples":[],"file":"extensions/mouse/mouse.lua","lineno":"154","name":"getButtons","notes":[" * This function is a wrapper to `hs.eventtap.checkMouseButtons`"," * This is an instantaneous poll of the current mouse buttons, not a callback."],"parameters":[" * None"],"returns":[" * Returns an array containing indicies starting from 1 up to the highest numbered button currently being pressed where the index is `true` if the button is currently pressed or `false` if it is not."," * Special hash tag synonyms for `left` (button 1), `right` (button 2), and `middle` (button 3) are also set to true if these buttons are currently being pressed."],"signature":"hs.mouse.getButtons() -> table","stripped_doc":"","type":"Function"},"getCurrentScreen":{"def":"hs.mouse.getCurrentScreen() -> screen or nil","desc":"Gets the screen the mouse pointer is on","doc":"Gets the screen the mouse pointer is on\n\nParameters:\n * None\n\nReturns:\n * An `hs.screen` object that the mouse pointer is on, or nil if an error occurred","examples":[],"file":"extensions/mouse/mouse.lua","lineno":"140","name":"getCurrentScreen","notes":[],"parameters":[" * None"],"returns":[" * An `hs.screen` object that the mouse pointer is on, or nil if an error occurred"],"signature":"hs.mouse.getCurrentScreen() -> screen or nil","stripped_doc":"","type":"Function"},"getRelativePosition":{"def":"hs.mouse.getRelativePosition() -> point or nil","desc":"Gets the co-ordinates of the mouse pointer, relative to the screen it is on","doc":"Gets the co-ordinates of the mouse pointer, relative to the screen it is on\n\nParameters:\n * None\n\nReturns:\n * A point-table containing the relative x and y co-ordinates of the mouse pointer, or nil if an error occured\n\nNotes:\n * The co-ordinates returned by this function are relative to the top left pixel of the screen the mouse is on (see `hs.mouse.getAbsolutePosition` if you need the location in the full desktop space)","examples":[],"file":"extensions/mouse/mouse.lua","lineno":"84","name":"getRelativePosition","notes":[" * The co-ordinates returned by this function are relative to the top left pixel of the screen the mouse is on (see `hs.mouse.getAbsolutePosition` if you need the location in the full desktop space)"],"parameters":[" * None"],"returns":[" * A point-table containing the relative x and y co-ordinates of the mouse pointer, or nil if an error occured"],"signature":"hs.mouse.getRelativePosition() -> point or nil","stripped_doc":"","type":"Function"},"names":{"def":"hs.mouse.names() -> table","desc":"Gets the names of any mice connected to the system.","doc":"Gets the names of any mice connected to the system.\n\nParameters:\n * None\n\nReturns:\n * A table containing strings of all the mice connected to the system.\n\nNotes:\n * This function leverages code from [ManyMouse](http://icculus.org/manymouse/).","examples":[],"file":"extensions/mouse/libmouse.m","lineno":"182","name":"names","notes":[" * This function leverages code from [ManyMouse](http://icculus.org/manymouse/)."],"parameters":[" * None"],"returns":[" * A table containing strings of all the mice connected to the system."],"signature":"hs.mouse.names() -> table","stripped_doc":"","type":"Function"},"scrollDirection":{"def":"hs.mouse.scrollDirection() -> string","desc":"Gets the system-wide direction of scolling","doc":"Gets the system-wide direction of scolling\n\nParameters:\n * None\n\nReturns:\n * A string, either \"natural\" or \"normal\"","examples":[],"file":"extensions/mouse/libmouse.m","lineno":"257","name":"scrollDirection","notes":[],"parameters":[" * None"],"returns":[" * A string, either \"natural\" or \"normal\""],"signature":"hs.mouse.scrollDirection() -> string","stripped_doc":"","type":"Function"},"setRelativePosition":{"def":"hs.mouse.setRelativePosition(point[, screen])","desc":"Sets the co-ordinates of the mouse pointer, relative to a screen","doc":"Sets the co-ordinates of the mouse pointer, relative to a screen\n\nParameters:\n * point - A point-table containing the relative x and y co-ordinates to move the mouse pointer to\n * screen - An optional `hs.screen` object. Defaults to the screen the mouse pointer is currently on\n\nReturns:\n * None","examples":[],"file":"extensions/mouse/mouse.lua","lineno":"112","name":"setRelativePosition","notes":[],"parameters":[" * point - A point-table containing the relative x and y co-ordinates to move the mouse pointer to"," * screen - An optional `hs.screen` object. Defaults to the screen the mouse pointer is currently on"],"returns":[" * None"],"signature":"hs.mouse.setRelativePosition(point[, screen])","stripped_doc":"","type":"Function"},"trackingSpeed":{"def":"hs.mouse.trackingSpeed([speed]) -> number","desc":"Gets/Sets the current system mouse tracking speed setting","doc":"Gets/Sets the current system mouse tracking speed setting\n\nParameters:\n * speed - An optional number containing the new tracking speed to set. If this is ommitted, the current setting is returned\n\nReturns:\n * A number indicating the current tracking speed setting for mice\n\nNotes:\n * This is represented in the System Preferences as the \"Tracking speed\" setting for mice\n * Note that not all values will work, they should map to the steps defined in the System Preferences app, which are:\n   * 0.0, 0.125, 0.5, 0.6875, 0.875, 1.0, 1.5, 2.0, 2.5, 3.0\n * Note that changes to this value will not be noticed immedaitely by macOS","examples":[],"file":"extensions/mouse/libmouse.m","lineno":"227","name":"trackingSpeed","notes":[" * This is represented in the System Preferences as the \"Tracking speed\" setting for mice"," * Note that not all values will work, they should map to the steps defined in the System Preferences app, which are:","   * 0.0, 0.125, 0.5, 0.6875, 0.875, 1.0, 1.5, 2.0, 2.5, 3.0"," * Note that changes to this value will not be noticed immedaitely by macOS"],"parameters":[" * speed - An optional number containing the new tracking speed to set. If this is ommitted, the current setting is returned"],"returns":[" * A number indicating the current tracking speed setting for mice"],"signature":"hs.mouse.trackingSpeed([speed]) -> number","stripped_doc":"","type":"Function"}}