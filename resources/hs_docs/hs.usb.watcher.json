{"new":{"def":"hs.usb.watcher.new(fn) -> watcher","desc":"Creates a new watcher for USB device events","doc":"Creates a new watcher for USB device events\n\nParameters:\n * fn - A function that will be called when a USB device is inserted or removed. The function should accept a single parameter, which is a table containing the following keys:\n  * eventType - A string containing either \"added\" or \"removed\" depending on whether the USB device was connected or disconnected\n  * productName - A string containing the name of the device\n  * vendorName - A string containing the name of the device vendor\n  * vendorID - A number containing the Vendor ID of the device\n  * productID - A number containing the Product ID of the device\n\nReturns:\n * A `hs.usb.watcher` object","examples":[],"file":"extensions/usb/libusb_watcher.m","lineno":"177","name":"new","notes":[],"parameters":[" * fn - A function that will be called when a USB device is inserted or removed. The function should accept a single parameter, which is a table containing the following keys:\n   * eventType - A string containing either \"added\" or \"removed\" depending on whether the USB device was connected or disconnected\n   * productName - A string containing the name of the device\n   * vendorName - A string containing the name of the device vendor\n   * vendorID - A number containing the Vendor ID of the device\n   * productID - A number containing the Product ID of the device"],"returns":[" * A `hs.usb.watcher` object"],"signature":"hs.usb.watcher.new(fn) -> watcher","stripped_doc":"","type":"Constructor"},"start":{"def":"hs.usb.watcher:start() -> watcher","desc":"Starts the USB watcher","doc":"Starts the USB watcher\n\nParameters:\n * None\n\nReturns:\n * The `hs.usb.watcher` object","examples":[],"file":"extensions/usb/libusb_watcher.m","lineno":"212","name":"start","notes":[],"parameters":[" * None"],"returns":[" * The `hs.usb.watcher` object"],"signature":"hs.usb.watcher:start() -> watcher","stripped_doc":"","type":"Method"},"stop":{"def":"hs.usb.watcher:stop() -> watcher","desc":"Stops the USB watcher","doc":"Stops the USB watcher\n\nParameters:\n * None\n\nReturns:\n * The `hs.usb.watcher` object","examples":[],"file":"extensions/usb/libusb_watcher.m","lineno":"251","name":"stop","notes":[],"parameters":[" * None"],"returns":[" * The `hs.usb.watcher` object"],"signature":"hs.usb.watcher:stop() -> watcher","stripped_doc":"","type":"Method"}}