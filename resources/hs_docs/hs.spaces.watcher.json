{"new":{"def":"hs.spaces.watcher.new(handler) -> watcher","desc":"Creates a new watcher for Space change events","doc":"Creates a new watcher for Space change events\n\nParameters:\n * handler - A function to be called when the active Space changes. It should accept one argument, which will be the number of the new Space (or -1 if the number cannot be determined)\n\nReturns:\n * An `hs.spaces.watcher` object","examples":[],"file":"extensions/spaces/libspaces_watcher.m","lineno":"69","name":"new","notes":[],"parameters":[" * handler - A function to be called when the active Space changes. It should accept one argument, which will be the number of the new Space (or -1 if the number cannot be determined)"],"returns":[" * An `hs.spaces.watcher` object"],"signature":"hs.spaces.watcher.new(handler) -> watcher","stripped_doc":"","type":"Constructor"},"start":{"def":"hs.spaces.watcher:start()","desc":"Starts the Spaces watcher","doc":"Starts the Spaces watcher\n\nParameters:\n * None\n\nReturns:\n * The watcher object","examples":[],"file":"extensions/spaces/libspaces_watcher.m","lineno":"95","name":"start","notes":[],"parameters":[" * None"],"returns":[" * The watcher object"],"signature":"hs.spaces.watcher:start()","stripped_doc":"","type":"Method"},"stop":{"def":"hs.spaces.watcher:stop()","desc":"Stops the Spaces watcher","doc":"Stops the Spaces watcher\n\nParameters:\n * None\n\nReturns:\n * The watcher object","examples":[],"file":"extensions/spaces/libspaces_watcher.m","lineno":"128","name":"stop","notes":[],"parameters":[" * None"],"returns":[" * The watcher object"],"signature":"hs.spaces.watcher:stop()","stripped_doc":"","type":"Method"}}